const mongoose = require('mongoose');

const AddressSchema = new mongoose.Schema(
  {
    name: {
      type: String
    },
    status: {
      type: String,
      enum: ["active", "inactive"],
      default: "active"
    }
  },
  {
    timestamps: true,
    toJSON: { virtuals: true },
    toObject: { virtuals: true }
  }
);

AddressSchema.virtual("residentials", {
  ref: "Citizen",
  localField: "_id",
  foreignField: "permanentAddress.address",
  justOne: false,
  autopopulate: true,
  match: {
    status: "active"
  },
  options: {
    select: "name nId fatherType"
  }
});

AddressSchema.plugin(require("./"));


const CitizenSchema = new mongoose.Schema(
  {
    nId: {
      type: String,
      unique: true,
      required: [true, "Please add national ID card"]
    },
    name: {
      type: String,
      required: [true, "Please add a name"],
      trim: true
    },
    permanentAddress: {
      name: {
        type: String,
        trim: true
      },
      address: {
        type: mongoose.Schema.ObjectId,
        ref: "Address"
      },
    },
    father: {
      type: mongoose.Schema.ObjectId,
      refPath: "fatherType",
      autopopulate: true
    },
    fatherType: {
      type: String,
      enum: ["Citizen", "Guest"],
      required: true
    },
    status: {
      type: String,
      enum: ["active", "inactive"],
      default: "active"
    }
  },
  {
    timestamps: true,
    toJSON: { virtuals: true },
    toObject: { virtuals: true }
  }
);

CitizenSchema.plugin(require("./"));


const Address = mongoose.model('Address', AddressSchema);

const Citizen = mongoose.model('Citizen', CitizenSchema);

async function run() {
  await mongoose.connect('mongodb://localhost:27017');
  await mongoose.connection.dropDatabase();

  const entry = await Address.create({
    name: "Another name for The Address",
    status: "active"
  });

  const doc = await Citizen.create({
    nId: 'Hello',
    name: 'There',
    permanentAddress: {
      name: 'The Address',
      address: entry._id
    },
    fatherType: "Guest"
  });
  const res = await Citizen.create({
    nId: 'Yo',
    name: 'Test',
    permanentAddress: {
      name: "The Address",
      address: entry._id
    },
    father: doc._id,
    fatherType: "Citizen",
    status: "active"
  });
  //console.log(await Citizen.find());
  console.log(await Address.findOne())
}

run();
